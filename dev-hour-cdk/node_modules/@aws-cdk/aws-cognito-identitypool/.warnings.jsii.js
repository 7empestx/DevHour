function _aws_cdk_aws_cognito_identitypool_IIdentityPool(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationProviders))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolAuthenticationProviders(p.authenticationProviders);
        if (!visitedObjects.has(p.roleMappings))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleMapping(p.roleMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolProviderType(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolProviderUrl(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolAmazonLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolFacebookLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolAppleLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolGoogleLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolTwitterLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolDigitsLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolProviders(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amazon))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolAmazonLoginProvider(p.amazon);
        if (!visitedObjects.has(p.apple))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolAppleLoginProvider(p.apple);
        if (!visitedObjects.has(p.digits))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolDigitsLoginProvider(p.digits);
        if (!visitedObjects.has(p.facebook))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolFacebookLoginProvider(p.facebook);
        if (!visitedObjects.has(p.google))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolGoogleLoginProvider(p.google);
        if (!visitedObjects.has(p.twitter))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolTwitterLoginProvider(p.twitter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolAuthenticationProviders(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.openIdConnectProviders))
            require("@aws-cdk/aws-iam/.warnings.jsii.js")._aws_cdk_aws_iam_IOpenIdConnectProvider(p.openIdConnectProviders);
        if (!visitedObjects.has(p.samlProviders))
            require("@aws-cdk/aws-iam/.warnings.jsii.js")._aws_cdk_aws_iam_ISamlProvider(p.samlProviders);
        if (!visitedObjects.has(p.userPools))
            _aws_cdk_aws_cognito_identitypool_IUserPoolAuthenticationProvider(p.userPools);
        if (!visitedObjects.has(p.amazon))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolAmazonLoginProvider(p.amazon);
        if (!visitedObjects.has(p.apple))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolAppleLoginProvider(p.apple);
        if (!visitedObjects.has(p.digits))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolDigitsLoginProvider(p.digits);
        if (!visitedObjects.has(p.facebook))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolFacebookLoginProvider(p.facebook);
        if (!visitedObjects.has(p.google))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolGoogleLoginProvider(p.google);
        if (!visitedObjects.has(p.twitter))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolTwitterLoginProvider(p.twitter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_IdentityPool(p) {
}
function _aws_cdk_aws_cognito_identitypool_IIdentityPoolRoleAttachment(p) {
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.identityPool))
            _aws_cdk_aws_cognito_identitypool_IIdentityPool(p.identityPool);
        if (!visitedObjects.has(p.roleMappings))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleMapping(p.roleMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleMapping(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.providerUrl))
            _aws_cdk_aws_cognito_identitypool_IdentityPoolProviderUrl(p.providerUrl);
        if (!visitedObjects.has(p.rules))
            _aws_cdk_aws_cognito_identitypool_RoleMappingRule(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_RoleMappingMatchType(p) {
}
function _aws_cdk_aws_cognito_identitypool_RoleMappingRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchType))
            _aws_cdk_aws_cognito_identitypool_RoleMappingMatchType(p.matchType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleAttachment(p) {
}
function _aws_cdk_aws_cognito_identitypool_IUserPoolAuthenticationProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProviderProps(p) {
}
function _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProviderBindOptions(p) {
}
function _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProviderBindConfig(p) {
}
function _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProvider(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_cognito_identitypool_IIdentityPool, _aws_cdk_aws_cognito_identitypool_IdentityPoolProps, _aws_cdk_aws_cognito_identitypool_IdentityPoolProviderType, _aws_cdk_aws_cognito_identitypool_IdentityPoolProviderUrl, _aws_cdk_aws_cognito_identitypool_IdentityPoolAmazonLoginProvider, _aws_cdk_aws_cognito_identitypool_IdentityPoolFacebookLoginProvider, _aws_cdk_aws_cognito_identitypool_IdentityPoolAppleLoginProvider, _aws_cdk_aws_cognito_identitypool_IdentityPoolGoogleLoginProvider, _aws_cdk_aws_cognito_identitypool_IdentityPoolTwitterLoginProvider, _aws_cdk_aws_cognito_identitypool_IdentityPoolDigitsLoginProvider, _aws_cdk_aws_cognito_identitypool_IdentityPoolProviders, _aws_cdk_aws_cognito_identitypool_IdentityPoolAuthenticationProviders, _aws_cdk_aws_cognito_identitypool_IdentityPool, _aws_cdk_aws_cognito_identitypool_IIdentityPoolRoleAttachment, _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleAttachmentProps, _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleMapping, _aws_cdk_aws_cognito_identitypool_RoleMappingMatchType, _aws_cdk_aws_cognito_identitypool_RoleMappingRule, _aws_cdk_aws_cognito_identitypool_IdentityPoolRoleAttachment, _aws_cdk_aws_cognito_identitypool_IUserPoolAuthenticationProvider, _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProviderProps, _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProviderBindOptions, _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProviderBindConfig, _aws_cdk_aws_cognito_identitypool_UserPoolAuthenticationProvider };
