"use strict";
/**
 * Alpha Stage
 * @version 0.9.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlphaStage = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const vpc_stack_1 = require("./vpc-stack");
const cognito_stack_1 = require("./cognito-stack");
const constants_1 = require("./constants");
/// -------------------------
/// AlphaStage Implementation
class AlphaStage extends aws_cdk_lib_1.Stage {
    /// -----------
    /// Constructor
    constructor(scope, props) {
        super(scope, props.stageId, { env: {
                account: props.account,
                region: props.region
            } });
        this.cognitoStack = new cognito_stack_1.CognitoStack(this, {
            account: props.account,
            region: props.region,
            id: constants_1.Constants.Cognito.Id,
            stackId: constants_1.Constants.Cognito.StackId,
            userPoolId: constants_1.Constants.Cognito.UserPool.Id,
            identityPoolId: constants_1.Constants.Cognito.IdentityPool.Id,
            identityProviderId: constants_1.Constants.Cognito.IdentityProviderId,
            userPoolClientId: constants_1.Constants.Cognito.UserPool.ClientId,
            selfSignUpEnabled: constants_1.Constants.Cognito.UserPool.SelfSignUpEnabled,
            enableAliasUsername: constants_1.Constants.Cognito.UserPool.SignInAliases.EnableUserName,
            enableAliasEmail: constants_1.Constants.Cognito.UserPool.SignInAliases.EnableEmail,
            fullnameRequired: constants_1.Constants.Cognito.UserPool.StandardAttributes.FullName.Required,
            fullnameMutable: constants_1.Constants.Cognito.UserPool.StandardAttributes.FullName.Mutable,
            passwordMinimumLength: constants_1.Constants.Cognito.UserPool.PasswordPolicy.MinimumLength,
            allowUnauthenticatedIdentities: constants_1.Constants.Cognito.IdentityPool.AllowUnauthenticatedIdentities,
            resourceArns: []
        });
        this.vpcStack = new vpc_stack_1.VpcStack(this, {
            account: props.account,
            region: props.region,
            id: constants_1.Constants.EC2.VPC.Id,
            stackId: constants_1.Constants.EC2.VPC.StackId,
            cidr: constants_1.Constants.EC2.VPC.CIDR,
            maxAzs: constants_1.Constants.EC2.VPC.MaxAZs,
            natGateways: constants_1.Constants.EC2.VPC.NATGateways,
            enableDnsHostnames: constants_1.Constants.EC2.VPC.EnableDNSHostNames,
            enableDnsSupport: constants_1.Constants.EC2.VPC.EnableDNSSupport,
            subnetConfiguration: [
                {
                    cidrMask: constants_1.Constants.EC2.VPC.SubnetConfiguration.SubnetCIDRMask,
                    name: constants_1.Constants.EC2.VPC.SubnetConfiguration.SubnetName,
                    subnetType: constants_1.Constants.EC2.VPC.SubnetConfiguration.Type
                }
            ]
        });
    }
}
exports.AlphaStage = AlphaStage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxwaGEtc3RhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhbHBoYS1zdGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztHQUdHOzs7QUFHSCw2Q0FBbUM7QUFDbkMsMkNBQXNDO0FBQ3RDLG1EQUE4QztBQUM5QywyQ0FBdUM7QUFZdkMsNkJBQTZCO0FBQzdCLDZCQUE2QjtBQUU3QixNQUFhLFVBQVcsU0FBUSxtQkFBSztJQVFqQyxlQUFlO0lBQ2YsZUFBZTtJQUVmLFlBQVksS0FBZ0IsRUFBRSxLQUFzQjtRQUNoRCxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsRUFBRSxHQUFHLEVBQUU7Z0JBQy9CLE9BQU8sRUFBSyxLQUFLLENBQUMsT0FBTztnQkFDekIsTUFBTSxFQUFNLEtBQUssQ0FBQyxNQUFNO2FBQzNCLEVBQUMsQ0FBQyxDQUFDO1FBRUosSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLDRCQUFZLENBQUMsSUFBSSxFQUFFO1lBQ3ZDLE9BQU8sRUFBeUIsS0FBSyxDQUFDLE9BQU87WUFDN0MsTUFBTSxFQUEwQixLQUFLLENBQUMsTUFBTTtZQUM1QyxFQUFFLEVBQThCLHFCQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDcEQsT0FBTyxFQUF5QixxQkFBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPO1lBQ3pELFVBQVUsRUFBc0IscUJBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDN0QsY0FBYyxFQUFrQixxQkFBUyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUNqRSxrQkFBa0IsRUFBYyxxQkFBUyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0I7WUFDcEUsZ0JBQWdCLEVBQWdCLHFCQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxRQUFRO1lBQ25FLGlCQUFpQixFQUFlLHFCQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUI7WUFDNUUsbUJBQW1CLEVBQWEscUJBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxjQUFjO1lBQ3ZGLGdCQUFnQixFQUFnQixxQkFBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFdBQVc7WUFDcEYsZ0JBQWdCLEVBQWdCLHFCQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsUUFBUTtZQUMvRixlQUFlLEVBQWlCLHFCQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsT0FBTztZQUM5RixxQkFBcUIsRUFBVyxxQkFBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLGFBQWE7WUFDdkYsOEJBQThCLEVBQUUscUJBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLDhCQUE4QjtZQUM3RixZQUFZLEVBQW9CLEVBQUU7U0FDckMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLG9CQUFRLENBQUMsSUFBSSxFQUFFO1lBQy9CLE9BQU8sRUFBaUIsS0FBSyxDQUFDLE9BQU87WUFDckMsTUFBTSxFQUFrQixLQUFLLENBQUMsTUFBTTtZQUNwQyxFQUFFLEVBQXNCLHFCQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQzVDLE9BQU8sRUFBaUIscUJBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU87WUFDakQsSUFBSSxFQUFvQixxQkFBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSTtZQUM5QyxNQUFNLEVBQWtCLHFCQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNO1lBQ2hELFdBQVcsRUFBYSxxQkFBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsV0FBVztZQUNyRCxrQkFBa0IsRUFBTSxxQkFBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsa0JBQWtCO1lBQzVELGdCQUFnQixFQUFRLHFCQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0I7WUFDMUQsbUJBQW1CLEVBQUs7Z0JBQ3BCO29CQUNJLFFBQVEsRUFBUSxxQkFBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsY0FBYztvQkFDcEUsSUFBSSxFQUFZLHFCQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVO29CQUNoRSxVQUFVLEVBQU0scUJBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLElBQUk7aUJBQzdEO2FBQ0o7U0FDSixDQUFDLENBQUM7SUFFUCxDQUFDO0NBRUo7QUF6REQsZ0NBeURDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbHBoYSBTdGFnZVxuICogQHZlcnNpb24gMC45LjBcbiAqL1xuXG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJ1xuaW1wb3J0IHsgU3RhZ2UgfSBmcm9tICdhd3MtY2RrLWxpYidcbmltcG9ydCB7IFZwY1N0YWNrIH0gZnJvbSAnLi92cGMtc3RhY2snXG5pbXBvcnQgeyBDb2duaXRvU3RhY2sgfSBmcm9tICcuL2NvZ25pdG8tc3RhY2snXG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tICcuL2NvbnN0YW50cydcblxuLy8vIC0tLS0tLS0tLS0tLS0tLS1cbi8vLyBBbHBoYVN0YWdlIFByb3BzXG5cbmV4cG9ydCBpbnRlcmZhY2UgQWxwaGFTdGFnZVByb3BzIHtcbiAgICBhY2NvdW50OiAgIHN0cmluZyxcbiAgICByZWdpb246ICAgIHN0cmluZyxcbiAgICBzdGFnZUlkOiAgIHN0cmluZyxcbiAgICBzdGFnZU5hbWU6IHN0cmluZ1xufVxuXG4vLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8vIEFscGhhU3RhZ2UgSW1wbGVtZW50YXRpb25cblxuZXhwb3J0IGNsYXNzIEFscGhhU3RhZ2UgZXh0ZW5kcyBTdGFnZSB7XG5cbiAgICAvLy8gLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8vIFByaXZhdGUgTWVtYmVyc1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBjb2duaXRvU3RhY2s6IENvZ25pdG9TdGFjaztcbiAgICBwcml2YXRlIHJlYWRvbmx5IHZwY1N0YWNrOiBWcGNTdGFjaztcblxuICAgIC8vLyAtLS0tLS0tLS0tLVxuICAgIC8vLyBDb25zdHJ1Y3RvclxuXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgcHJvcHM6IEFscGhhU3RhZ2VQcm9wcykge1xuICAgICAgICBzdXBlcihzY29wZSwgcHJvcHMuc3RhZ2VJZCwgeyBlbnY6IHtcbiAgICAgICAgICAgIGFjY291bnQ6ICAgIHByb3BzLmFjY291bnQsXG4gICAgICAgICAgICByZWdpb246ICAgICBwcm9wcy5yZWdpb25cbiAgICAgICAgfX0pO1xuXG4gICAgICAgIHRoaXMuY29nbml0b1N0YWNrID0gbmV3IENvZ25pdG9TdGFjayh0aGlzLCB7XG4gICAgICAgICAgICBhY2NvdW50OiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLmFjY291bnQsXG4gICAgICAgICAgICByZWdpb246ICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLnJlZ2lvbiwgXG4gICAgICAgICAgICBpZDogICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnN0YW50cy5Db2duaXRvLklkLFxuICAgICAgICAgICAgc3RhY2tJZDogICAgICAgICAgICAgICAgICAgICAgICBDb25zdGFudHMuQ29nbml0by5TdGFja0lkLFxuICAgICAgICAgICAgdXNlclBvb2xJZDogICAgICAgICAgICAgICAgICAgICBDb25zdGFudHMuQ29nbml0by5Vc2VyUG9vbC5JZCxcbiAgICAgICAgICAgIGlkZW50aXR5UG9vbElkOiAgICAgICAgICAgICAgICAgQ29uc3RhbnRzLkNvZ25pdG8uSWRlbnRpdHlQb29sLklkLFxuICAgICAgICAgICAgaWRlbnRpdHlQcm92aWRlcklkOiAgICAgICAgICAgICBDb25zdGFudHMuQ29nbml0by5JZGVudGl0eVByb3ZpZGVySWQsXG4gICAgICAgICAgICB1c2VyUG9vbENsaWVudElkOiAgICAgICAgICAgICAgIENvbnN0YW50cy5Db2duaXRvLlVzZXJQb29sLkNsaWVudElkLFxuICAgICAgICAgICAgc2VsZlNpZ25VcEVuYWJsZWQ6ICAgICAgICAgICAgICBDb25zdGFudHMuQ29nbml0by5Vc2VyUG9vbC5TZWxmU2lnblVwRW5hYmxlZCxcbiAgICAgICAgICAgIGVuYWJsZUFsaWFzVXNlcm5hbWU6ICAgICAgICAgICAgQ29uc3RhbnRzLkNvZ25pdG8uVXNlclBvb2wuU2lnbkluQWxpYXNlcy5FbmFibGVVc2VyTmFtZSxcbiAgICAgICAgICAgIGVuYWJsZUFsaWFzRW1haWw6ICAgICAgICAgICAgICAgQ29uc3RhbnRzLkNvZ25pdG8uVXNlclBvb2wuU2lnbkluQWxpYXNlcy5FbmFibGVFbWFpbCxcbiAgICAgICAgICAgIGZ1bGxuYW1lUmVxdWlyZWQ6ICAgICAgICAgICAgICAgQ29uc3RhbnRzLkNvZ25pdG8uVXNlclBvb2wuU3RhbmRhcmRBdHRyaWJ1dGVzLkZ1bGxOYW1lLlJlcXVpcmVkLFxuICAgICAgICAgICAgZnVsbG5hbWVNdXRhYmxlOiAgICAgICAgICAgICAgICBDb25zdGFudHMuQ29nbml0by5Vc2VyUG9vbC5TdGFuZGFyZEF0dHJpYnV0ZXMuRnVsbE5hbWUuTXV0YWJsZSxcbiAgICAgICAgICAgIHBhc3N3b3JkTWluaW11bUxlbmd0aDogICAgICAgICAgQ29uc3RhbnRzLkNvZ25pdG8uVXNlclBvb2wuUGFzc3dvcmRQb2xpY3kuTWluaW11bUxlbmd0aCxcbiAgICAgICAgICAgIGFsbG93VW5hdXRoZW50aWNhdGVkSWRlbnRpdGllczogQ29uc3RhbnRzLkNvZ25pdG8uSWRlbnRpdHlQb29sLkFsbG93VW5hdXRoZW50aWNhdGVkSWRlbnRpdGllcyxcbiAgICAgICAgICAgIHJlc291cmNlQXJuczogICAgICAgICAgICAgICAgICAgW11cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy52cGNTdGFjayA9IG5ldyBWcGNTdGFjayh0aGlzLCB7XG4gICAgICAgICAgICBhY2NvdW50OiAgICAgICAgICAgICAgICBwcm9wcy5hY2NvdW50LFxuICAgICAgICAgICAgcmVnaW9uOiAgICAgICAgICAgICAgICAgcHJvcHMucmVnaW9uLFxuICAgICAgICAgICAgaWQ6ICAgICAgICAgICAgICAgICAgICAgQ29uc3RhbnRzLkVDMi5WUEMuSWQsXG4gICAgICAgICAgICBzdGFja0lkOiAgICAgICAgICAgICAgICBDb25zdGFudHMuRUMyLlZQQy5TdGFja0lkLFxuICAgICAgICAgICAgY2lkcjogICAgICAgICAgICAgICAgICAgQ29uc3RhbnRzLkVDMi5WUEMuQ0lEUixcbiAgICAgICAgICAgIG1heEF6czogICAgICAgICAgICAgICAgIENvbnN0YW50cy5FQzIuVlBDLk1heEFacyxcbiAgICAgICAgICAgIG5hdEdhdGV3YXlzOiAgICAgICAgICAgIENvbnN0YW50cy5FQzIuVlBDLk5BVEdhdGV3YXlzLFxuICAgICAgICAgICAgZW5hYmxlRG5zSG9zdG5hbWVzOiAgICAgQ29uc3RhbnRzLkVDMi5WUEMuRW5hYmxlRE5TSG9zdE5hbWVzLFxuICAgICAgICAgICAgZW5hYmxlRG5zU3VwcG9ydDogICAgICAgQ29uc3RhbnRzLkVDMi5WUEMuRW5hYmxlRE5TU3VwcG9ydCxcbiAgICAgICAgICAgIHN1Ym5ldENvbmZpZ3VyYXRpb246ICAgIFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNpZHJNYXNrOiAgICAgICBDb25zdGFudHMuRUMyLlZQQy5TdWJuZXRDb25maWd1cmF0aW9uLlN1Ym5ldENJRFJNYXNrLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAgICAgICAgICAgQ29uc3RhbnRzLkVDMi5WUEMuU3VibmV0Q29uZmlndXJhdGlvbi5TdWJuZXROYW1lLFxuICAgICAgICAgICAgICAgICAgICBzdWJuZXRUeXBlOiAgICAgQ29uc3RhbnRzLkVDMi5WUEMuU3VibmV0Q29uZmlndXJhdGlvbi5UeXBlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9KTtcblxuICAgIH1cblxufVxuIl19